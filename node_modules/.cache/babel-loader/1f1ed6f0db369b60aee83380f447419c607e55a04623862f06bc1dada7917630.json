{"ast":null,"code":"var _jsxFileName = \"/Users/ilyafilippov/Downloads/todos/src/components/TasksPanel/TasksPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useQuery } from \"react-query\";\nimport { useTaskMutations } from \"../../hooks/useMutations\";\nimport { AddButton, ConfirmButton, ConfirmButtons, ConfirmText, DeleteConfirm, DeleteConfirmBack, Title, Wrapper } from \"./TasksPanel.styles\";\nimport { Modal } from \"../Modal/Modal\";\nimport { TasksList } from \"../TasksList/TasksList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TasksPanel = () => {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [taskIdToDelete, setTaskIdToDelete] = useState(null);\n  const tasks = useQuery('tasks', () => JSON.parse(localStorage.getItem('tasks')) || []);\n  const {\n    addTaskMutation,\n    deleteTaskMutation,\n    updateTaskMutation\n  } = useTaskMutations();\n  const openModal = (task = null) => {\n    setSelectedTask(task);\n    setModalOpen(true);\n  };\n  const closeModal = () => {\n    setSelectedTask(null);\n    setModalOpen(false);\n  };\n  const handleAddTask = newTask => {\n    addTaskMutation.mutate(newTask);\n    closeModal();\n  };\n  const handleUpdateTask = task => {\n    openModal(task);\n  };\n  const confirmDelete = taskId => {\n    setTaskIdToDelete(taskId);\n    setShowDeleteConfirmation(true);\n  };\n  const handleDeleteConfirmation = () => {\n    deleteTaskMutation.mutate(taskIdToDelete);\n    setShowDeleteConfirmation(false);\n  };\n  const handleCancelDelete = () => {\n    setShowDeleteConfirmation(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Todo list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n      onClick: () => openModal(),\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TasksList, {\n      tasks: tasks.data,\n      onDelete: confirmDelete,\n      onUpdate: handleUpdateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      close: closeModal,\n      onSave: title => {\n        if (selectedTask) {\n          updateTaskMutation.mutate({\n            id: selectedTask.id,\n            title\n          });\n        } else {\n          handleAddTask({\n            title\n          });\n        }\n      },\n      onCancel: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), showDeleteConfirmation && /*#__PURE__*/_jsxDEV(DeleteConfirmBack, {\n      children: /*#__PURE__*/_jsxDEV(DeleteConfirm, {\n        children: [/*#__PURE__*/_jsxDEV(ConfirmText, {\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ConfirmButtons, {\n          children: [/*#__PURE__*/_jsxDEV(ConfirmButton, {\n            onClick: handleDeleteConfirmation,\n            children: \"\\u0414\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ConfirmButton, {\n            onClick: handleCancelDelete,\n            children: \"\\u041D\\u0435\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(TasksPanel, \"JArrUbJZE9MjEBmW7AiVrGfAax4=\", false, function () {\n  return [useQuery, useTaskMutations];\n});\n_c = TasksPanel;\nvar _c;\n$RefreshReg$(_c, \"TasksPanel\");","map":{"version":3,"names":["React","useState","useQuery","useTaskMutations","AddButton","ConfirmButton","ConfirmButtons","ConfirmText","DeleteConfirm","DeleteConfirmBack","Title","Wrapper","Modal","TasksList","jsxDEV","_jsxDEV","TasksPanel","_s","modalOpen","setModalOpen","selectedTask","setSelectedTask","showDeleteConfirmation","setShowDeleteConfirmation","taskIdToDelete","setTaskIdToDelete","tasks","JSON","parse","localStorage","getItem","addTaskMutation","deleteTaskMutation","updateTaskMutation","openModal","task","closeModal","handleAddTask","newTask","mutate","handleUpdateTask","confirmDelete","taskId","handleDeleteConfirmation","handleCancelDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","data","onDelete","onUpdate","close","onSave","title","id","onCancel","_c","$RefreshReg$"],"sources":["/Users/ilyafilippov/Downloads/todos/src/components/TasksPanel/TasksPanel.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {useQuery} from \"react-query\";\r\nimport {useTaskMutations} from \"../../hooks/useMutations\";\r\nimport {\r\n    AddButton,\r\n    ConfirmButton, ConfirmButtons,\r\n    ConfirmText,\r\n    DeleteConfirm,\r\n    DeleteConfirmBack,\r\n    Title,\r\n    Wrapper\r\n} from \"./TasksPanel.styles\";\r\nimport {Modal} from \"../Modal/Modal\";\r\nimport {TasksList} from \"../TasksList/TasksList\";\r\n\r\nexport const TasksPanel = () => {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [selectedTask, setSelectedTask] = useState(null);\r\n    const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\r\n    const [taskIdToDelete, setTaskIdToDelete] = useState(null);\r\n\r\n    const tasks = useQuery('tasks',\r\n        () => JSON.parse(localStorage.getItem('tasks')) || []);\r\n\r\n    const {\r\n        addTaskMutation,\r\n        deleteTaskMutation,\r\n        updateTaskMutation\r\n    } = useTaskMutations();\r\n\r\n    const openModal = (task = null) => {\r\n        setSelectedTask(task);\r\n        setModalOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setSelectedTask(null);\r\n        setModalOpen(false);\r\n    };\r\n\r\n    const handleAddTask = (newTask) => {\r\n        addTaskMutation.mutate(newTask);\r\n        closeModal();\r\n    };\r\n\r\n    const handleUpdateTask = (task) => {\r\n        openModal(task);\r\n    };\r\n\r\n    const confirmDelete = (taskId) => {\r\n        setTaskIdToDelete(taskId);\r\n        setShowDeleteConfirmation(true);\r\n    };\r\n\r\n    const handleDeleteConfirmation = () => {\r\n        deleteTaskMutation.mutate(taskIdToDelete);\r\n        setShowDeleteConfirmation(false);\r\n    };\r\n\r\n    const handleCancelDelete = () => {\r\n        setShowDeleteConfirmation(false);\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Title>Todo list</Title>\r\n            <AddButton onClick={() => openModal()}>Добавить задачу</AddButton>\r\n\r\n            <TasksList tasks={tasks.data} onDelete={confirmDelete} onUpdate={handleUpdateTask}/>\r\n\r\n            {modalOpen && (\r\n                <Modal\r\n                    close={closeModal}\r\n                    onSave={(title) => {\r\n                        if (selectedTask) {\r\n                            updateTaskMutation.mutate({id: selectedTask.id, title});\r\n                        } else {\r\n                            handleAddTask({title});\r\n                        }\r\n                    }}\r\n                    onCancel={closeModal}\r\n                />\r\n            )}\r\n            {showDeleteConfirmation && (\r\n                <DeleteConfirmBack>\r\n                    <DeleteConfirm>\r\n                        <ConfirmText>Удалить?</ConfirmText>\r\n                        <ConfirmButtons>\r\n                            <ConfirmButton onClick={handleDeleteConfirmation}>Да</ConfirmButton>\r\n                            <ConfirmButton onClick={handleCancelDelete}>Нет</ConfirmButton>\r\n                        </ConfirmButtons>\r\n                    </DeleteConfirm>\r\n                </DeleteConfirmBack>\r\n            )}\r\n        </Wrapper>\r\n    );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}